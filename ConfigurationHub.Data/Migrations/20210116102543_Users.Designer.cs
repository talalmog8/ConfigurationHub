// <auto-generated />

using System;
using Configuration.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

namespace ConfigurationHub.Data.Migrations
{
    [DbContext(typeof(ConfigurationContext))]
    [Migration("20210116102543_Users")]
    partial class Users
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ConfigurationHub.Domain.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasAlternateKey("Username");

                    b.HasIndex("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ConfigurationHub.Domain.Config", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SystemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LastModified");

                    b.HasIndex("SystemId");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("ConfigurationHub.Domain.ConfigContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConfigId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConfigId")
                        .IsUnique();

                    b.ToTable("ConfigContents");
                });

            modelBuilder.Entity("ConfigurationHub.Domain.System", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MicroserviceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MicroserviceName");

                    b.ToTable("ConfigSystems");
                });

            modelBuilder.Entity("ConfigurationHub.Domain.Config", b =>
                {
                    b.HasOne("ConfigurationHub.Domain.Auth.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("ConfigurationHub.Domain.System", "System")
                        .WithMany("Configs")
                        .HasForeignKey("SystemId");

                    b.Navigation("Author");

                    b.Navigation("System");
                });

            modelBuilder.Entity("ConfigurationHub.Domain.ConfigContent", b =>
                {
                    b.HasOne("ConfigurationHub.Domain.Config", "Config")
                        .WithOne("ConfigContent")
                        .HasForeignKey("ConfigurationHub.Domain.ConfigContent", "ConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Config");
                });

            modelBuilder.Entity("ConfigurationHub.Domain.Config", b =>
                {
                    b.Navigation("ConfigContent");
                });

            modelBuilder.Entity("ConfigurationHub.Domain.System", b =>
                {
                    b.Navigation("Configs");
                });
#pragma warning restore 612, 618
        }
    }
}
